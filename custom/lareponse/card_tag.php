<?php
/* Copyright (C) 2022       Ayoub Bayed	<ayoub@code42.fr>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

/**
 *       \file       lareponse/card_tag.php
 *       \ingroup    category
 *       \brief      Page to show a category card
 */

// Load Dolibarr environment
$res = 0;
// Try main.inc.php into web root known defined into CONTEXT_DOCUMENT_ROOT (not always defined)
if (!$res && !empty($_SERVER["CONTEXT_DOCUMENT_ROOT"])) $res = @include $_SERVER["CONTEXT_DOCUMENT_ROOT"]."/main.inc.php";
// Try main.inc.php into web root detected using web root calculated from SCRIPT_FILENAME
$tmp = empty($_SERVER['SCRIPT_FILENAME']) ? '' : $_SERVER['SCRIPT_FILENAME']; $tmp2 = realpath(__FILE__); $i = strlen($tmp) - 1; $j = strlen($tmp2) - 1;
while ($i > 0 && $j > 0 && isset($tmp[$i]) && isset($tmp2[$j]) && $tmp[$i] == $tmp2[$j]) { $i--; $j--; }
if (!$res && $i > 0 && file_exists(substr($tmp, 0, ($i + 1))."/main.inc.php")) $res = @include substr($tmp, 0, ($i + 1))."/main.inc.php";
if (!$res && $i > 0 && file_exists(dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php")) $res = @include dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php";
// Try main.inc.php using relative path
if (!$res && file_exists("../main.inc.php")) $res = @include "../main.inc.php";
if (!$res && file_exists("../../main.inc.php")) $res = @include "../../main.inc.php";
if (!$res && file_exists("../../../main.inc.php")) $res = @include "../../../main.inc.php";
if (!$res) die("Include of main fails");
require_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/categories.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';
dol_include_once('/lareponse/class/tag.class.php');
dol_include_once('/lareponse/lib/lareponse.lib.php');
dol_include_once('/lareponse/class/article.class.php');

// Load translation files required by the page
$langs->load("categories");

$id         = GETPOST('id', 'int');
$label      = GETPOST('label', 'alpha');
$type       = GETPOST('type', 'int');
$removeelem = GETPOST('removeelem', 'int');
$elemid     = GETPOST('elemid', 'int');
$action     = GETPOST('action', 'aZ09') ?GETPOST('action', 'aZ09') : 'view'; // The action 'add', 'create', 'edit', 'update', 'view', ...
$massaction = GETPOST('massaction', 'alpha'); // The bulk action (combo box choice into lists)
$show_files = GETPOST('show_files', 'int'); // Show files area generated by bulk actions ?
$confirm    = GETPOST('confirm', 'alpha'); // Result of a confirmation
$cancel     = GETPOST('cancel', 'alpha'); // We click on a Cancel button
$toselect   = GETPOST('toselect', 'array'); // Array of ids of elements selected into a list
$contextpage = GETPOST('contextpage', 'aZ') ?GETPOST('contextpage', 'aZ') : 'categorylist'; // To manage different context of search
$backtopage = GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss  = GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')


// Load variable for pagination
$limit = GETPOST('limit', 'int') ?GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield = GETPOST('sortfield', 'aZ09comma');
$sortorder = GETPOST('sortorder', 'aZ09comma');
$page = GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page == -1 || GETPOST('button_search', 'alpha') || GETPOST('button_removefilter', 'alpha') || (empty($toselect) && $massaction === '0')) { $page = 0; }     // If $page is not defined, or '' or -1 or if we click on clear filters or if we select empty mass action
$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;

if ($id == "" && $label == "") {
	dol_print_error('', 'Missing parameter id');
	exit();
}

// Security check
$result = restrictedArea($user, 'categorie', $id, '&category');

$object = new Tag($db);
$article = new Article($db);
$result = $object->fetch($id, $label, $type);
if ($result <= 0) {
	dol_print_error($db, $object->error); exit;
}
$object->fetch_optionals();
if ($result <= 0) {
	dol_print_error($db, $object->error); exit;
}

$objecttype = 'lareponse';
$type = Tag::LAREPONSE_TAG_TYPE;
if (is_numeric($objecttype)) $objecttype = 'lareponse';

$extrafields = new ExtraFields($db);
$extrafields->fetch_name_optionals_label($object->table_element);

// Initialize technical object to manage hooks. Note that conf->hooks_modules contains array array
$hookmanager->initHooks(array('categorycard', 'globalcard'));


/*
 *	Actions
 */
$parameters = array();
$reshook = $hookmanager->executeHooks('doActions', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks
// Remove element from category
if ($id > 0 && $removeelem > 0) {
	if ($type == 43 && ($user->rights->lareponse->tag->write || $user->rights->lareponse->tag->delete)) {
		$tmpobject = new Tag($db);
		$result = $tmpobject->fetch($removeelem);
		$elementtype = 'lareponse';
	}


	$result = $article->delLinkArticle($id, $removeelem);

	if ($result < 0) dol_print_error('', $object->error);
}

if (($user->rights->lareponse->tag->delete ?? false) && $action == 'confirm_delete' && $confirm == 'yes') {
	if ($object->delete($user) >= 0) {
		header("Location: ".dol_buildpath('/lareponse/tagstree.php?type='.$type, 1));
		exit;
	} else {
		setEventMessages($object->error, $object->errors, 'errors');
	}
}

if ($action == 'addintocategory' && $type == 43) {
	if ($type == 43) {
		$newobject = new Tag($db);
		$elementtype = 'lareponse';
	}

	if ($_POST['idarticle']) {
		$result = $article->linkArticle($id, $_POST['idarticle']);

		if ($result > 0) {
			setEventMessages($langs->trans("ArticleWasAddedSuccessfully"), null, 'mesgs');
		}
	}
}

/*
 * View
 */

$form = new Form($db);
$formother = new FormOther($db);

$arrayofjs = array('/includes/jquery/plugins/jquerytreeview/jquery.treeview.js', '/includes/jquery/plugins/jquerytreeview/lib/jquery.cookie.js');
$arrayofcss = array('/includes/jquery/plugins/jquerytreeview/jquery.treeview.css');
$helpurl = '';
llxHeader("", $langs->trans("Categories"), $helpurl, '', 0, 0, $arrayofjs, $arrayofcss);

$title = $langs->trans("ok");

$head = tags_prepare_head($object, $type);

print dol_get_fiche_head($head, 'card', $langs->trans($title), -1, 'category');
$backtolist = (GETPOST('backtolist') ? GETPOST('backtolist') : dol_buildpath('/lareponse/tagstree.php?leftmenu=cat&type='.$type, 1));
$linkback = '<a href="'.$backtolist.'">'.$langs->trans("BackToList").'</a>';
$object->next_prev_filter = ' type = '.$object->type;
$object->ref = $object->label;
$morehtmlref = '<br><div class="refidno"><a href="'.dol_buildpath('/lareponse/tagstree.php?leftmenu=cat&type='.$type, 1).'">'.$langs->trans("Root").'</a> >> ';
$ways = $object->print_all_ways(" &gt;&gt; ", '', 1);
foreach ($ways as $way) {
	$morehtmlref .= $way."<br>\n";
}
$morehtmlref .= '</div>';

dol_banner_tab($object, 'id', $linkback, ($user->socid ? 0 : 1), 'rowid', 'label', $morehtmlref, '&type='.$type, 0, '', '', 1);


/*
 * Confirmation suppression
 */

// Confirmation to delete
if ($action == 'delete') {
	if (isset($conf->global->LA_REPONSE_PROTECT_TAG_DELETION) && $conf->global->LA_REPONSE_PROTECT_TAG_DELETION == 1) {
		$id = GETPOST('id', 'none');
		$sql = 'SELECT count(fk_article) as count FROM ' . MAIN_DB_PREFIX . 'lareponse_article_tag WHERE fk_tag = ' . $id;
		$resql = $db->query($sql);
		if ($resql) {
			$obj = $db->fetch_object($resql);
			$linkedObjects = intval($obj->count);
			if ($linkedObjects > 0) {
				setEventMessage($langs->trans('DeleteErrorTagLinkedToObject'), 'errors');
			} else {
				echo $form->formconfirm($_SERVER["PHP_SELF"] . '?id=' . $object->id, $langs->trans('Deletetag'), $langs->trans('ConfirmDeleteTag'), 'confirm_delete', '', 0, 1);
			}
		}
	} else {
		echo $form->formconfirm($_SERVER["PHP_SELF"] . '?id=' . $object->id, $langs->trans('Deletetag'), $langs->trans('ConfirmDeleteTag'), 'confirm_delete', '', 0, 1);
	}
}

print '<br>';

print '<div class="fichecenter">';
print '<div class="underbanner clearboth"></div>';
print '<table class="border centpercent tableforfield">';

// Description
print '<tr><td class="titlefield notopnoleft tdtop">';
print $langs->trans("Description").'</td><td>';
print dol_htmlentitiesbr($object->description);
print '</td></tr>';

// Color
print '<tr><td class="notopnoleft">';
print $langs->trans("Color").'</td><td>';
print $formother->showColor($object->color);
print '</td></tr>';

// Other attributes
include DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_view.tpl.php';

print '</table>';
print '</div>';

print dol_get_fiche_end();


/*
 * Boutons actions
 */

print "<div class='tabsAction'>\n";
$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks
if ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');
if (empty($reshook)) {
	if (($user->rights->lareponse->tag->write ?? false)) {
		if (isset($object->socid)) {
			$socid = ($object->socid ? "&socid=".$object->socid : "");
			print '<a class="butAction" href="'.dol_buildpath('/lareponse/edit_tag.php?id='.$object->id.'&socid='.$socid.'&type='.$type, 1).'">'.$langs->trans("Modify").'</a>';
		} else {
			print '<a class="butAction" href="'.dol_buildpath('/lareponse/edit_tag.php?id='.$object->id.'&type='.$type, 1).'">'.$langs->trans("Modify").'</a>';
		}
	}

	if (($user->rights->lareponse->tag->delete ?? false)) {
		print '<a class="butActionDelete" href="'.$_SERVER["PHP_SELF"].'?action=delete&token='.newToken().'&id='.$object->id.'&type='.$type.'">'.$langs->trans("Delete").'</a>';
	}
}

print "</div>";

$newcardbutton = '';
if (!empty($user->rights->lareponse->tag->write)) {
	$link = dol_buildpath('lareponse/create_tag.php', 1);
	$link .= '?action=create';
	$link .= '&type='.$type;
	$link .= '&catorigin='.$object->id;
	$link .= '&backtopage='.urlencode($_SERVER["PHP_SELF"].'?type='.$type.'&id='.$id);

	$newcardbutton = '<div class="right">';
	$newcardbutton .= dolGetButtonTitle($langs->trans('NewCategory'), '', 'fa fa-plus-circle', $link);
	$newcardbutton .= '</div>';
}


/*
 * Sub-category tree view of this category
 */

print '<div class="fichecenter">';

print load_fiche_titre($langs->trans("SubCats"), $newcardbutton, 'object_category');


print '<table class="liste nohover" width="100%">';

print '<tr class="liste_titre">';
print '<td>'.$langs->trans("SubCats").'</td>';
print '<td></td>';
print '<td class="right">';

if (!empty($conf->use_javascript_ajax)) {
	print '<div id="iddivjstreecontrol">';
	print '<a class="notasortlink" href="#">'.img_picto('', 'folder').' '.$langs->trans("UndoExpandAll").'</a>';
	print " | ";
	print '<a class="notasortlink" href="#">'.img_picto('', 'folder-open').' '.$langs->trans("ExpandAll").'</a>';
	print '</div>';
}

print '</td>';
print '</tr>';

$cats = $object->getFilles();

if ($cats < 0) {
	dol_print_error($db, $object->error, $object->errors);
} elseif (count($cats) < 1) {
	print '<tr class="oddeven">';
	print '<td colspan="3" class="opacitymedium">'.$langs->trans("NoSubCat").'</td>';
	print '</tr>';
} else {
	$categstatic = new Tag($db);

	$fulltree = $categstatic->getFullArbo($type, $object->id, 1);

	// Define data (format for treeview)
	$data = array();
	$data[] = array('rowid'=>0, 'fk_menu'=>-1, 'title'=>"racine", 'mainmenu'=>'', 'leftmenu'=>'', 'fk_mainmenu'=>'', 'fk_leftmenu'=>'');
	foreach ($fulltree as $key => $val) {
		$categstatic->id = $val['id'];
		$categstatic->label = $val['label'];
		$categstatic->color = $val['color'];
		$categstatic->type = $type;
		$desc = dol_htmlcleanlastbr($val['description']);

		if ($categstatic->color) {
			if ($categstatic->color[0] == "#") {
				$categstatic->color = substr($categstatic->color, 1);
			}
			$color = ' style="background: #'.$categstatic->color.';"';
		} else {
			$color = ' style="background: #bbb"';
		}
		$entry = '<table class="nobordernopadding centpercent">';
		$entry .= '<tr>';

		$entry .= '<td>';
		$entry .= '<span class="noborderoncategories" '.$color.'>'.$categstatic->getNomUrl(1, '', 60).'</span>';
		$entry .= '</td>';

		$entry .= '<td class="right" width="20px;">';
		$entry .= '<a href="'.dol_buildpath('/lareponse/card_tag.php?id='.$val['id'].'&type='.$type, 1).'">'.img_view().'</a>';
		$entry .= '</td>';

		$entry .= '</tr>';
		$entry .= '</table>';

		$data[] = array('rowid' => $val['rowid'], 'fk_menu' => $val['fk_parent'], 'entry' => $entry);
	}

	if ((count($data) - 1)) {
		require_once DOL_DOCUMENT_ROOT.'/core/lib/treeview.lib.php';
		print '<tr class="pair">';
		print '<td colspan="3">';

		// $data[0] is the current shown category, to don't show the current category use $data[1] instead
		tree_recur($data, $data[1], 0);

		print '</td>';
		print '</tr>';
	} else {
		print '<tr class="pair">';
		print '<td colspan="3">';
		print '<table class="nobordernopadding">';

		print '<tr class="nobordernopadding">';
		print '<td>'.img_picto_common('', 'treemenu/branchbottom.gif').'</td>';
		print '<td valign="middle">'.$langs->trans("NoCategoryYet").'</td>';
		print '<td>&nbsp;</td>';
		print '</tr>';

		print '</table>';
		print '</td>';
		print '</tr>';
	}
}

print "</table>";
print "</div>";

// List of mass actions available
$arrayofmassactions = array(
	//'validate'=>$langs->trans("Validate"),
);
$massactionbutton = $form->selectMassAction('', $arrayofmassactions);
$typeid = $type;


// Categorie lareponse
if ($type == 43) {
	$permission = $user->rights->lareponse->tag->write ?? false;

	$articles = $article->getArticles($id);
	if ($articles < 0) {
		dol_print_error($db, $object->error, $object->errors);
	} else {
		// Form to add record into a category
		$showclassifyform = 1;
		if ($showclassifyform) {
			print '<br>';
			print '<form method="post" action="'.$_SERVER["PHP_SELF"].'">';
			print '<input type="hidden" name="token" value="'.newToken().'">';
			print '<input type="hidden" name="typeid" value="'.$typeid.'">';
			print '<input type="hidden" name="type" value="'.$typeid.'">';
			print '<input type="hidden" name="id" value="'.$object->id.'">';
			print '<input type="hidden" name="action" value="addintocategory">';
			print '<table class="noborder centpercent">';
			print '<tr class="liste_titre"><td>';
			print $langs->trans("AddTagIntoArticle").' &nbsp;';
			$article->selectArticles($id);
			print '<input type="submit" class="button buttongen" value="'.$langs->trans("ClassifyInCategory").'"></td>';
			print '</tr>';
			print '</table>';
			print '</form>';
		}

		print '<form method="post" action="'.$_SERVER["PHP_SELF"].'">';
		print '<input type="hidden" name="token" value="'.newToken().'">';
		print '<input type="hidden" name="typeid" value="'.$typeid.'">';
		print '<input type="hidden" name="type" value="'.$typeid.'">';
		print '<input type="hidden" name="id" value="'.$object->id.'">';
		print '<input type="hidden" name="action" value="list">';

		print '<br>';
		$param = '&limit='.$limit.'&id='.$id.'&type='.$type; $num = count($articles);
		$nbtotalofrecords = '';
		$newcardbutton = '';

		print_barre_liste($langs->trans("Articles"), $page, $_SERVER["PHP_SELF"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, 'object_article@lareponse', 0, $newcardbutton, '', $limit);


		print '<table class="noborder centpercent">'."\n";
		print '<tr class="liste_titre"><td colspan="3">'.$langs->trans("Ref").'</td></tr>'."\n";

		if (count($articles) > 0) {
			$i = 0;
			foreach ($articles as $idArticle) {
				$article->fetch($idArticle->id);
				$i++;
				if ($i > $limit) break;

				print "\t".'<tr class="oddeven">'."\n";
				print '<td class="nowrap" valign="top">';
				print $article->getNomUrl(1);
				print "</td>\n";
				// Link to delete from category
				print '<td class="right">';
				if ($permission) {
					print "<a href= '".$_SERVER['PHP_SELF']."?".(empty($socid) ? 'id' : 'socid')."=".$object->id."&amp;type=".$typeid."&amp;removeelem=".$idArticle->id."'>";
					print $langs->trans("DeleteFromCat");
					print img_picto($langs->trans("DeleteFromCat"), 'unlink', '', false, 0, 0, '', 'paddingleft');
					print "</a>";
				}
				print '</td>';
				print "</tr>\n";
			}
		} else {
			print '<tr class="oddeven"><td colspan="2" class="opacitymedium">'.$langs->trans("ThisCategoryHasNoItems").'</td></tr>';
		}
		print "</table>\n";

		print '</form>'."\n";
	}
}
// Select 2 script
print '<script>
    $(document).ready(function() {
        $("#searcharticles").select2();

    });
</script>';
// End of page
llxFooter();
$db->close();
